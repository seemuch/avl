index[] get_overlap(char[] pattern) {
	<begin_display>
	display index result[len(pattern)];
	display index k = 0;
	for (index i = 1; i < len(pattern); i = i + 1) {
		while (k > 0 && pattern[k] != pattern[i])
			k = result[k - 1];
		if (pattern[k] == pattern[i]) {
			k = k + 1;
			result[i] = k;
		}
	}
	<end_display>
	return result;
}

index kmp(char target[], char pattern[], index overlap[]) {
	<begin_display>
	display index q = 0;
	for (index i = 0; i < len(target); i = i + 1) {
	while (q > 0 && pattern[q] != target[i])
		q = overlap[q - 1];
		if (pattern[q] == target[i])
			q = q + 1;
		if (q == len(pattern))
			return i - m + 1;
	}
	<end_display>
	return -1;
}

int main() {
	<begin_display>
	display char target[] = “banananobano”;
	display char pattern[] = “nano”;
	display int overlap[] = get_overlap(pattern);
	index result = kmp(target, pattern, overlap);
	<end_display>
	print(result);
}
